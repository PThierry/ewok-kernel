--
-- Copyright 2018 The wookey project team <wookey@ssi.gouv.fr>
--   - Ryad     Benadjila
--   - Arnauld  Michelizza
--   - Mathieu  Renard
--   - Philippe Thierry
--   - Philippe Trebuchet
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
--     Unless required by applicable law or agreed to in writing, software
--     distributed under the License is distributed on an "AS IS" BASIS,
--     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--     See the License for the specific language governing permissions and
--     limitations under the License.
--
--

with ewok.devices_shared;  use ewok.devices_shared;
with ewok.dma_shared;      use ewok.dma_shared;
with ewok.ipc;             use ewok.ipc;
with ewok.devices;
with ewok.dma;


package body ewok.tasks.finish
   with spark_mode => off
is

   procedure release_devices
     (id : in  ewok.tasks_shared.t_task_id)
   is
      dev_id   : ewok.devices_shared.t_device_id;
      ok       : boolean;
   begin
      for dev_descriptor in ewok.tasks.tasks_list(id).device_id'range
      loop
         dev_id := ewok.tasks.tasks_list(id).device_id(dev_descriptor);
         if dev_id /= ID_DEV_UNUSED then
            -- Unmounting the device
            if ewok.tasks.is_mounted (id, dev_id) then
               ewok.tasks.unmount_device (id, dev_id, ok);
               if not ok then
                  raise program_error; -- Should never happen
               end if;
            end if;

            -- Removing it from the task's list of used devices
            ewok.tasks.remove_device (id, dev_id, ok);
            if not ok then
               raise program_error; -- Should never happen
            end if;

            -- Release GPIOs, EXTIs and interrupts
            ewok.devices.release_device (id, dev_id, ok);
         end if;
      end loop;

   end release_devices;


   procedure release_dmas
     (id : in  ewok.tasks_shared.t_task_id)
   is
      dma_id : ewok.dma_shared.t_user_dma_index;
   begin

      for dma_descriptor in ewok.tasks.tasks_list(id).dma_id'range
      loop
         dma_id := ewok.tasks.tasks_list(id).dma_id(dma_descriptor);
         if dma_id /= ID_DMA_UNUSED then
            ewok.dma.disable_dma_stream (dma_id);
            ewok.tasks.tasks_list(id).num_dma_id :=
               ewok.tasks.tasks_list(id).num_dma_id - 1;
         end if;
      end loop;

   end release_dmas;


   procedure release_ipcs
     (id : in  ewok.tasks_shared.t_task_id)
   is
   begin
      for peer in ewok.tasks.tasks_list(id).ipc_endpoint_id'range
      loop
         if peer /= ID_UNUSED and then
            ewok.tasks.tasks_list(id).ipc_endpoint_id(peer) /= NULL
         then
            ewok.ipc.release_endpoint
              (ewok.tasks.tasks_list(id).ipc_endpoint_id(peer));
         end if;
      end loop;
   end release_ipcs;

end ewok.tasks.finish;
